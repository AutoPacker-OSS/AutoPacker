# @formatter:off

# Environment-specific configuration. Replace all the ${}  with necessary values. Or configure the
# respective environment variables in your GIT pipeline.

###########
# General #
###########

server:
  port: ${FILE_DELIVERY_SERVER_PORT}

############
# KeyCloak #
############

keycloak:
  realm: ${KEYCLOAK_REALM}
  auth-server-url: ${AUTHORIZATION_SERVER_URL}
  ssl-required: ${SSL_REQUIRED} # default: external
  resource: ${FILE_DELIVERY_API_RESOURCE_ID}
  credentials:
    secret: ${FILE_DELIVERY_API_RESOURCE_SECRET}
  use-resource-role-mappings: ${USE_RESOURCE_ROLE_MAPPINGS} # default: true
  bearer-only: ${BEARER_ONLY} # default: true

########################
# Spring Configuration #
########################

spring:
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration, org.springframework.boot.autoconfigure.data.mongo.MongoDataAutoConfiguration
  ############
  # Database #
  ############
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${HOST}:${PORT}/${DATABASE_NAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}

#########################
# Application Constants #
#########################

api:
  root-url: ${API_ROOT_URL}
  client-username: ${API_CLIENT_USERNAME}
  client-password: ${API_CLIENT_PASSWORD}

fdapi.mongo.url: mongodb://<mongodb_user>:<mongodb_password>@<host>:<port>

docker:
  username: ${DOCKER_USERNAME}
  token: ${DOCKER_TOKEN}
  repository: ${DOCKER_REPO}


######################
# Actuator & Logging #
######################

logging:
  file:
    path: ./src/main/resources/logs/
    max-history: 2
    max-size: 50MB

# @formatter:on