{
  "openapi" : "3.0.0",
  "info" : {
    "version" : "1.0.0",
    "title" : "Server Manager",
    "description" : "Spring Boot API that delivers server management functionality to the users of AutoPacker."
  },
  "servers" : [ {
    "url" : "http://dev.libane.tk:8081"
  } ],
  "tags" : [ {
    "name" : "members",
    "description" : "Operations available to all our members."
  } ],
  "paths" : {
    "/server/new-server" : {
      "post" : {
        "tags" : [ "members" ],
        "summary" : "Add a new server associated with the user making the request",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Server"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Server successfully added"
          },
          "400" : {
            "description" : "Server creation failed"
          }
        }
      }
    },
    "/server/server-overview/{serverId}" : {
      "get" : {
        "tags" : [ "members" ],
        "description" : "Returns a specific server by its server id",
        "parameters" : [ {
          "name" : "serverId",
          "in" : "path",
          "description" : "server id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Server retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Server"
                }
              }
            }
          },
          "400" : {
            "description" : "Couldn't fetch server"
          }
        }
      }
    },
    "/server" : {
      "get" : {
        "tags" : [ "members" ],
        "description" : "Returns a list of servers associated with the authenticated user",
        "responses" : {
          "200" : {
            "description" : "Successfully got all servers",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Server"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Couldn't fetch servers"
          }
        }
      }
    },
    "/server/{search}" : {
      "get" : {
        "tags" : [ "members" ],
        "description" : "Returns a list containing all the servers related to the authenticated user that match the search criteria for the servers title",
        "parameters" : [ {
          "name" : "search",
          "in" : "path",
          "description" : "server title",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Servers retrieved",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Server"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Couldn't fetch servers"
          }
        }
      }
    },
    "/server/add-project" : {
      "post" : {
        "tags" : [ "members" ],
        "description" : "Add a list of one or more projects to an existing server",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "server_id", "project_ids" ],
                "properties" : {
                  "server_id" : {
                    "type" : "integer"
                  },
                  "project_ids" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Project(s) successfully added to the server"
          },
          "400" : {
            "description" : "Couldn't add project(s) to the specified server"
          }
        }
      }
    },
    "/server/remove-project" : {
      "post" : {
        "tags" : [ "members" ],
        "description" : "Remove a specified project from a specified server owned by the authenticated user",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "required" : [ "server_id", "project_id" ],
                "properties" : {
                  "server_id" : {
                    "type" : "integer"
                  },
                  "project_id" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Project successfully removed from the specified server"
          },
          "400" : {
            "description" : "Project couldn't be removed from the specified server"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "authKey" : {
        "type" : "apiKey",
        "in" : "header",
        "name" : "Cookie"
      }
    },
    "responses" : {
      "403" : {
        "description" : "Access denied, token is not present or is invalid.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "timestamp" : {
                  "type" : "string",
                  "example" : "2020-03-10T23:46:32.380+0000"
                },
                "status" : {
                  "type" : "integer",
                  "example" : 403
                },
                "error" : {
                  "type" : "string",
                  "example" : "Forbidden"
                },
                "message" : {
                  "type" : "string",
                  "example" : "Access Denied"
                },
                "path" : {
                  "type" : "string",
                  "example" : "/auth/login"
                }
              }
            }
          }
        }
      }
    },
    "schemas" : {
      "Server" : {
        "type" : "object",
        "description" : "Represents a server",
        "required" : [ "id", "title", "ip", "serverUsername", "serverPassword", "userUsername", "status", "open" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "example" : "My Server"
          },
          "description" : {
            "type" : "string",
            "example" : "server Description"
          },
          "ip" : {
            "type" : "string",
            "example" : "127.0.0.1"
          },
          "serverUsername" : {
            "type" : "string",
            "example" : "root"
          },
          "serverPassword" : {
            "type" : "string",
            "example" : "rootPass"
          },
          "ssh" : {
            "type" : "string",
            "example" : "ssh-rsa sshkey"
          },
          "userUsername" : {
            "type" : "string",
            "example" : "Anonym101"
          },
          "projectIds" : {
            "type" : "string",
            "example" : "1,2,7"
          },
          "status" : {
            "type" : "string",
            "example" : true
          },
          "open" : {
            "type" : "boolean",
            "example" : true
          }
        }
      }
    }
  }
}